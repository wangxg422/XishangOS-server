// Code generated by ent, DO NOT EDIT.

package sysmenu

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/wangxg422/XishangOS-backend/app/module/system/model/schema/codegen/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeleteAt applies equality check predicate on the "delete_at" field. It's identical to DeleteAtEQ.
func DeleteAt(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldDeleteAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeleteBy applies equality check predicate on the "delete_by" field. It's identical to DeleteByEQ.
func DeleteBy(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldDeleteBy, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldStatus, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldRemark, v))
}

// Sort applies equality check predicate on the "sort" field. It's identical to SortEQ.
func Sort(v int) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldSort, v))
}

// DelFlag applies equality check predicate on the "del_flag" field. It's identical to DelFlagEQ.
func DelFlag(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldDelFlag, v))
}

// Pid applies equality check predicate on the "pid" field. It's identical to PidEQ.
func Pid(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldPid, v))
}

// MenuName applies equality check predicate on the "menu_name" field. It's identical to MenuNameEQ.
func MenuName(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldMenuName, v))
}

// MenuTitle applies equality check predicate on the "menu_title" field. It's identical to MenuTitleEQ.
func MenuTitle(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldMenuTitle, v))
}

// MenuIcon applies equality check predicate on the "menu_icon" field. It's identical to MenuIconEQ.
func MenuIcon(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldMenuIcon, v))
}

// Condition applies equality check predicate on the "condition" field. It's identical to ConditionEQ.
func Condition(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldCondition, v))
}

// MenuType applies equality check predicate on the "menu_type" field. It's identical to MenuTypeEQ.
func MenuType(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldMenuType, v))
}

// Path applies equality check predicate on the "path" field. It's identical to PathEQ.
func Path(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldPath, v))
}

// Component applies equality check predicate on the "component" field. It's identical to ComponentEQ.
func Component(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldComponent, v))
}

// ModuleType applies equality check predicate on the "module_type" field. It's identical to ModuleTypeEQ.
func ModuleType(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldModuleType, v))
}

// ModelID applies equality check predicate on the "model_id" field. It's identical to ModelIDEQ.
func ModelID(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldModelID, v))
}

// IsHide applies equality check predicate on the "is_hide" field. It's identical to IsHideEQ.
func IsHide(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldIsHide, v))
}

// IsIframe applies equality check predicate on the "is_iframe" field. It's identical to IsIframeEQ.
func IsIframe(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldIsIframe, v))
}

// IsLink applies equality check predicate on the "is_link" field. It's identical to IsLinkEQ.
func IsLink(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldIsLink, v))
}

// IsCached applies equality check predicate on the "is_cached" field. It's identical to IsCachedEQ.
func IsCached(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldIsCached, v))
}

// IsAffix applies equality check predicate on the "is_affix" field. It's identical to IsAffixEQ.
func IsAffix(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldIsAffix, v))
}

// Redirect applies equality check predicate on the "redirect" field. It's identical to RedirectEQ.
func Redirect(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldRedirect, v))
}

// LinkURL applies equality check predicate on the "link_url" field. It's identical to LinkURLEQ.
func LinkURL(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldLinkURL, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldUpdatedAt))
}

// DeleteAtEQ applies the EQ predicate on the "delete_at" field.
func DeleteAtEQ(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldDeleteAt, v))
}

// DeleteAtNEQ applies the NEQ predicate on the "delete_at" field.
func DeleteAtNEQ(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldDeleteAt, v))
}

// DeleteAtIn applies the In predicate on the "delete_at" field.
func DeleteAtIn(vs ...time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldDeleteAt, vs...))
}

// DeleteAtNotIn applies the NotIn predicate on the "delete_at" field.
func DeleteAtNotIn(vs ...time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldDeleteAt, vs...))
}

// DeleteAtGT applies the GT predicate on the "delete_at" field.
func DeleteAtGT(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldDeleteAt, v))
}

// DeleteAtGTE applies the GTE predicate on the "delete_at" field.
func DeleteAtGTE(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldDeleteAt, v))
}

// DeleteAtLT applies the LT predicate on the "delete_at" field.
func DeleteAtLT(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldDeleteAt, v))
}

// DeleteAtLTE applies the LTE predicate on the "delete_at" field.
func DeleteAtLTE(v time.Time) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldDeleteAt, v))
}

// DeleteAtIsNil applies the IsNil predicate on the "delete_at" field.
func DeleteAtIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldDeleteAt))
}

// DeleteAtNotNil applies the NotNil predicate on the "delete_at" field.
func DeleteAtNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldDeleteAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldCreatedBy))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldUpdatedBy))
}

// DeleteByEQ applies the EQ predicate on the "delete_by" field.
func DeleteByEQ(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldDeleteBy, v))
}

// DeleteByNEQ applies the NEQ predicate on the "delete_by" field.
func DeleteByNEQ(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldDeleteBy, v))
}

// DeleteByIn applies the In predicate on the "delete_by" field.
func DeleteByIn(vs ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldDeleteBy, vs...))
}

// DeleteByNotIn applies the NotIn predicate on the "delete_by" field.
func DeleteByNotIn(vs ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldDeleteBy, vs...))
}

// DeleteByGT applies the GT predicate on the "delete_by" field.
func DeleteByGT(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldDeleteBy, v))
}

// DeleteByGTE applies the GTE predicate on the "delete_by" field.
func DeleteByGTE(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldDeleteBy, v))
}

// DeleteByLT applies the LT predicate on the "delete_by" field.
func DeleteByLT(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldDeleteBy, v))
}

// DeleteByLTE applies the LTE predicate on the "delete_by" field.
func DeleteByLTE(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldDeleteBy, v))
}

// DeleteByIsNil applies the IsNil predicate on the "delete_by" field.
func DeleteByIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldDeleteBy))
}

// DeleteByNotNil applies the NotNil predicate on the "delete_by" field.
func DeleteByNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldDeleteBy))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldStatus, v))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkIsNil applies the IsNil predicate on the "remark" field.
func RemarkIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldRemark))
}

// RemarkNotNil applies the NotNil predicate on the "remark" field.
func RemarkNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldRemark))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContainsFold(FieldRemark, v))
}

// SortEQ applies the EQ predicate on the "sort" field.
func SortEQ(v int) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldSort, v))
}

// SortNEQ applies the NEQ predicate on the "sort" field.
func SortNEQ(v int) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldSort, v))
}

// SortIn applies the In predicate on the "sort" field.
func SortIn(vs ...int) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldSort, vs...))
}

// SortNotIn applies the NotIn predicate on the "sort" field.
func SortNotIn(vs ...int) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldSort, vs...))
}

// SortGT applies the GT predicate on the "sort" field.
func SortGT(v int) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldSort, v))
}

// SortGTE applies the GTE predicate on the "sort" field.
func SortGTE(v int) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldSort, v))
}

// SortLT applies the LT predicate on the "sort" field.
func SortLT(v int) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldSort, v))
}

// SortLTE applies the LTE predicate on the "sort" field.
func SortLTE(v int) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldSort, v))
}

// SortIsNil applies the IsNil predicate on the "sort" field.
func SortIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldSort))
}

// SortNotNil applies the NotNil predicate on the "sort" field.
func SortNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldSort))
}

// DelFlagEQ applies the EQ predicate on the "del_flag" field.
func DelFlagEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldDelFlag, v))
}

// DelFlagNEQ applies the NEQ predicate on the "del_flag" field.
func DelFlagNEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldDelFlag, v))
}

// DelFlagIn applies the In predicate on the "del_flag" field.
func DelFlagIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldDelFlag, vs...))
}

// DelFlagNotIn applies the NotIn predicate on the "del_flag" field.
func DelFlagNotIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldDelFlag, vs...))
}

// DelFlagGT applies the GT predicate on the "del_flag" field.
func DelFlagGT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldDelFlag, v))
}

// DelFlagGTE applies the GTE predicate on the "del_flag" field.
func DelFlagGTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldDelFlag, v))
}

// DelFlagLT applies the LT predicate on the "del_flag" field.
func DelFlagLT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldDelFlag, v))
}

// DelFlagLTE applies the LTE predicate on the "del_flag" field.
func DelFlagLTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldDelFlag, v))
}

// PidEQ applies the EQ predicate on the "pid" field.
func PidEQ(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldPid, v))
}

// PidNEQ applies the NEQ predicate on the "pid" field.
func PidNEQ(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldPid, v))
}

// PidIn applies the In predicate on the "pid" field.
func PidIn(vs ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldPid, vs...))
}

// PidNotIn applies the NotIn predicate on the "pid" field.
func PidNotIn(vs ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldPid, vs...))
}

// PidGT applies the GT predicate on the "pid" field.
func PidGT(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldPid, v))
}

// PidGTE applies the GTE predicate on the "pid" field.
func PidGTE(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldPid, v))
}

// PidLT applies the LT predicate on the "pid" field.
func PidLT(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldPid, v))
}

// PidLTE applies the LTE predicate on the "pid" field.
func PidLTE(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldPid, v))
}

// MenuNameEQ applies the EQ predicate on the "menu_name" field.
func MenuNameEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldMenuName, v))
}

// MenuNameNEQ applies the NEQ predicate on the "menu_name" field.
func MenuNameNEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldMenuName, v))
}

// MenuNameIn applies the In predicate on the "menu_name" field.
func MenuNameIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldMenuName, vs...))
}

// MenuNameNotIn applies the NotIn predicate on the "menu_name" field.
func MenuNameNotIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldMenuName, vs...))
}

// MenuNameGT applies the GT predicate on the "menu_name" field.
func MenuNameGT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldMenuName, v))
}

// MenuNameGTE applies the GTE predicate on the "menu_name" field.
func MenuNameGTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldMenuName, v))
}

// MenuNameLT applies the LT predicate on the "menu_name" field.
func MenuNameLT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldMenuName, v))
}

// MenuNameLTE applies the LTE predicate on the "menu_name" field.
func MenuNameLTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldMenuName, v))
}

// MenuNameContains applies the Contains predicate on the "menu_name" field.
func MenuNameContains(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContains(FieldMenuName, v))
}

// MenuNameHasPrefix applies the HasPrefix predicate on the "menu_name" field.
func MenuNameHasPrefix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasPrefix(FieldMenuName, v))
}

// MenuNameHasSuffix applies the HasSuffix predicate on the "menu_name" field.
func MenuNameHasSuffix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasSuffix(FieldMenuName, v))
}

// MenuNameIsNil applies the IsNil predicate on the "menu_name" field.
func MenuNameIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldMenuName))
}

// MenuNameNotNil applies the NotNil predicate on the "menu_name" field.
func MenuNameNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldMenuName))
}

// MenuNameEqualFold applies the EqualFold predicate on the "menu_name" field.
func MenuNameEqualFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEqualFold(FieldMenuName, v))
}

// MenuNameContainsFold applies the ContainsFold predicate on the "menu_name" field.
func MenuNameContainsFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContainsFold(FieldMenuName, v))
}

// MenuTitleEQ applies the EQ predicate on the "menu_title" field.
func MenuTitleEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldMenuTitle, v))
}

// MenuTitleNEQ applies the NEQ predicate on the "menu_title" field.
func MenuTitleNEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldMenuTitle, v))
}

// MenuTitleIn applies the In predicate on the "menu_title" field.
func MenuTitleIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldMenuTitle, vs...))
}

// MenuTitleNotIn applies the NotIn predicate on the "menu_title" field.
func MenuTitleNotIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldMenuTitle, vs...))
}

// MenuTitleGT applies the GT predicate on the "menu_title" field.
func MenuTitleGT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldMenuTitle, v))
}

// MenuTitleGTE applies the GTE predicate on the "menu_title" field.
func MenuTitleGTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldMenuTitle, v))
}

// MenuTitleLT applies the LT predicate on the "menu_title" field.
func MenuTitleLT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldMenuTitle, v))
}

// MenuTitleLTE applies the LTE predicate on the "menu_title" field.
func MenuTitleLTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldMenuTitle, v))
}

// MenuTitleContains applies the Contains predicate on the "menu_title" field.
func MenuTitleContains(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContains(FieldMenuTitle, v))
}

// MenuTitleHasPrefix applies the HasPrefix predicate on the "menu_title" field.
func MenuTitleHasPrefix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasPrefix(FieldMenuTitle, v))
}

// MenuTitleHasSuffix applies the HasSuffix predicate on the "menu_title" field.
func MenuTitleHasSuffix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasSuffix(FieldMenuTitle, v))
}

// MenuTitleIsNil applies the IsNil predicate on the "menu_title" field.
func MenuTitleIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldMenuTitle))
}

// MenuTitleNotNil applies the NotNil predicate on the "menu_title" field.
func MenuTitleNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldMenuTitle))
}

// MenuTitleEqualFold applies the EqualFold predicate on the "menu_title" field.
func MenuTitleEqualFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEqualFold(FieldMenuTitle, v))
}

// MenuTitleContainsFold applies the ContainsFold predicate on the "menu_title" field.
func MenuTitleContainsFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContainsFold(FieldMenuTitle, v))
}

// MenuIconEQ applies the EQ predicate on the "menu_icon" field.
func MenuIconEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldMenuIcon, v))
}

// MenuIconNEQ applies the NEQ predicate on the "menu_icon" field.
func MenuIconNEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldMenuIcon, v))
}

// MenuIconIn applies the In predicate on the "menu_icon" field.
func MenuIconIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldMenuIcon, vs...))
}

// MenuIconNotIn applies the NotIn predicate on the "menu_icon" field.
func MenuIconNotIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldMenuIcon, vs...))
}

// MenuIconGT applies the GT predicate on the "menu_icon" field.
func MenuIconGT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldMenuIcon, v))
}

// MenuIconGTE applies the GTE predicate on the "menu_icon" field.
func MenuIconGTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldMenuIcon, v))
}

// MenuIconLT applies the LT predicate on the "menu_icon" field.
func MenuIconLT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldMenuIcon, v))
}

// MenuIconLTE applies the LTE predicate on the "menu_icon" field.
func MenuIconLTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldMenuIcon, v))
}

// MenuIconContains applies the Contains predicate on the "menu_icon" field.
func MenuIconContains(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContains(FieldMenuIcon, v))
}

// MenuIconHasPrefix applies the HasPrefix predicate on the "menu_icon" field.
func MenuIconHasPrefix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasPrefix(FieldMenuIcon, v))
}

// MenuIconHasSuffix applies the HasSuffix predicate on the "menu_icon" field.
func MenuIconHasSuffix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasSuffix(FieldMenuIcon, v))
}

// MenuIconIsNil applies the IsNil predicate on the "menu_icon" field.
func MenuIconIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldMenuIcon))
}

// MenuIconNotNil applies the NotNil predicate on the "menu_icon" field.
func MenuIconNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldMenuIcon))
}

// MenuIconEqualFold applies the EqualFold predicate on the "menu_icon" field.
func MenuIconEqualFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEqualFold(FieldMenuIcon, v))
}

// MenuIconContainsFold applies the ContainsFold predicate on the "menu_icon" field.
func MenuIconContainsFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContainsFold(FieldMenuIcon, v))
}

// ConditionEQ applies the EQ predicate on the "condition" field.
func ConditionEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldCondition, v))
}

// ConditionNEQ applies the NEQ predicate on the "condition" field.
func ConditionNEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldCondition, v))
}

// ConditionIn applies the In predicate on the "condition" field.
func ConditionIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldCondition, vs...))
}

// ConditionNotIn applies the NotIn predicate on the "condition" field.
func ConditionNotIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldCondition, vs...))
}

// ConditionGT applies the GT predicate on the "condition" field.
func ConditionGT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldCondition, v))
}

// ConditionGTE applies the GTE predicate on the "condition" field.
func ConditionGTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldCondition, v))
}

// ConditionLT applies the LT predicate on the "condition" field.
func ConditionLT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldCondition, v))
}

// ConditionLTE applies the LTE predicate on the "condition" field.
func ConditionLTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldCondition, v))
}

// ConditionContains applies the Contains predicate on the "condition" field.
func ConditionContains(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContains(FieldCondition, v))
}

// ConditionHasPrefix applies the HasPrefix predicate on the "condition" field.
func ConditionHasPrefix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasPrefix(FieldCondition, v))
}

// ConditionHasSuffix applies the HasSuffix predicate on the "condition" field.
func ConditionHasSuffix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasSuffix(FieldCondition, v))
}

// ConditionIsNil applies the IsNil predicate on the "condition" field.
func ConditionIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldCondition))
}

// ConditionNotNil applies the NotNil predicate on the "condition" field.
func ConditionNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldCondition))
}

// ConditionEqualFold applies the EqualFold predicate on the "condition" field.
func ConditionEqualFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEqualFold(FieldCondition, v))
}

// ConditionContainsFold applies the ContainsFold predicate on the "condition" field.
func ConditionContainsFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContainsFold(FieldCondition, v))
}

// MenuTypeEQ applies the EQ predicate on the "menu_type" field.
func MenuTypeEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldMenuType, v))
}

// MenuTypeNEQ applies the NEQ predicate on the "menu_type" field.
func MenuTypeNEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldMenuType, v))
}

// MenuTypeIn applies the In predicate on the "menu_type" field.
func MenuTypeIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldMenuType, vs...))
}

// MenuTypeNotIn applies the NotIn predicate on the "menu_type" field.
func MenuTypeNotIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldMenuType, vs...))
}

// MenuTypeGT applies the GT predicate on the "menu_type" field.
func MenuTypeGT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldMenuType, v))
}

// MenuTypeGTE applies the GTE predicate on the "menu_type" field.
func MenuTypeGTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldMenuType, v))
}

// MenuTypeLT applies the LT predicate on the "menu_type" field.
func MenuTypeLT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldMenuType, v))
}

// MenuTypeLTE applies the LTE predicate on the "menu_type" field.
func MenuTypeLTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldMenuType, v))
}

// MenuTypeIsNil applies the IsNil predicate on the "menu_type" field.
func MenuTypeIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldMenuType))
}

// MenuTypeNotNil applies the NotNil predicate on the "menu_type" field.
func MenuTypeNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldMenuType))
}

// PathEQ applies the EQ predicate on the "path" field.
func PathEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldPath, v))
}

// PathNEQ applies the NEQ predicate on the "path" field.
func PathNEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldPath, v))
}

// PathIn applies the In predicate on the "path" field.
func PathIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldPath, vs...))
}

// PathNotIn applies the NotIn predicate on the "path" field.
func PathNotIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldPath, vs...))
}

// PathGT applies the GT predicate on the "path" field.
func PathGT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldPath, v))
}

// PathGTE applies the GTE predicate on the "path" field.
func PathGTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldPath, v))
}

// PathLT applies the LT predicate on the "path" field.
func PathLT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldPath, v))
}

// PathLTE applies the LTE predicate on the "path" field.
func PathLTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldPath, v))
}

// PathContains applies the Contains predicate on the "path" field.
func PathContains(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContains(FieldPath, v))
}

// PathHasPrefix applies the HasPrefix predicate on the "path" field.
func PathHasPrefix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasPrefix(FieldPath, v))
}

// PathHasSuffix applies the HasSuffix predicate on the "path" field.
func PathHasSuffix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasSuffix(FieldPath, v))
}

// PathIsNil applies the IsNil predicate on the "path" field.
func PathIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldPath))
}

// PathNotNil applies the NotNil predicate on the "path" field.
func PathNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldPath))
}

// PathEqualFold applies the EqualFold predicate on the "path" field.
func PathEqualFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEqualFold(FieldPath, v))
}

// PathContainsFold applies the ContainsFold predicate on the "path" field.
func PathContainsFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContainsFold(FieldPath, v))
}

// ComponentEQ applies the EQ predicate on the "component" field.
func ComponentEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldComponent, v))
}

// ComponentNEQ applies the NEQ predicate on the "component" field.
func ComponentNEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldComponent, v))
}

// ComponentIn applies the In predicate on the "component" field.
func ComponentIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldComponent, vs...))
}

// ComponentNotIn applies the NotIn predicate on the "component" field.
func ComponentNotIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldComponent, vs...))
}

// ComponentGT applies the GT predicate on the "component" field.
func ComponentGT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldComponent, v))
}

// ComponentGTE applies the GTE predicate on the "component" field.
func ComponentGTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldComponent, v))
}

// ComponentLT applies the LT predicate on the "component" field.
func ComponentLT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldComponent, v))
}

// ComponentLTE applies the LTE predicate on the "component" field.
func ComponentLTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldComponent, v))
}

// ComponentContains applies the Contains predicate on the "component" field.
func ComponentContains(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContains(FieldComponent, v))
}

// ComponentHasPrefix applies the HasPrefix predicate on the "component" field.
func ComponentHasPrefix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasPrefix(FieldComponent, v))
}

// ComponentHasSuffix applies the HasSuffix predicate on the "component" field.
func ComponentHasSuffix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasSuffix(FieldComponent, v))
}

// ComponentIsNil applies the IsNil predicate on the "component" field.
func ComponentIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldComponent))
}

// ComponentNotNil applies the NotNil predicate on the "component" field.
func ComponentNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldComponent))
}

// ComponentEqualFold applies the EqualFold predicate on the "component" field.
func ComponentEqualFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEqualFold(FieldComponent, v))
}

// ComponentContainsFold applies the ContainsFold predicate on the "component" field.
func ComponentContainsFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContainsFold(FieldComponent, v))
}

// ModuleTypeEQ applies the EQ predicate on the "module_type" field.
func ModuleTypeEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldModuleType, v))
}

// ModuleTypeNEQ applies the NEQ predicate on the "module_type" field.
func ModuleTypeNEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldModuleType, v))
}

// ModuleTypeIn applies the In predicate on the "module_type" field.
func ModuleTypeIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldModuleType, vs...))
}

// ModuleTypeNotIn applies the NotIn predicate on the "module_type" field.
func ModuleTypeNotIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldModuleType, vs...))
}

// ModuleTypeGT applies the GT predicate on the "module_type" field.
func ModuleTypeGT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldModuleType, v))
}

// ModuleTypeGTE applies the GTE predicate on the "module_type" field.
func ModuleTypeGTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldModuleType, v))
}

// ModuleTypeLT applies the LT predicate on the "module_type" field.
func ModuleTypeLT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldModuleType, v))
}

// ModuleTypeLTE applies the LTE predicate on the "module_type" field.
func ModuleTypeLTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldModuleType, v))
}

// ModuleTypeContains applies the Contains predicate on the "module_type" field.
func ModuleTypeContains(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContains(FieldModuleType, v))
}

// ModuleTypeHasPrefix applies the HasPrefix predicate on the "module_type" field.
func ModuleTypeHasPrefix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasPrefix(FieldModuleType, v))
}

// ModuleTypeHasSuffix applies the HasSuffix predicate on the "module_type" field.
func ModuleTypeHasSuffix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasSuffix(FieldModuleType, v))
}

// ModuleTypeIsNil applies the IsNil predicate on the "module_type" field.
func ModuleTypeIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldModuleType))
}

// ModuleTypeNotNil applies the NotNil predicate on the "module_type" field.
func ModuleTypeNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldModuleType))
}

// ModuleTypeEqualFold applies the EqualFold predicate on the "module_type" field.
func ModuleTypeEqualFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEqualFold(FieldModuleType, v))
}

// ModuleTypeContainsFold applies the ContainsFold predicate on the "module_type" field.
func ModuleTypeContainsFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContainsFold(FieldModuleType, v))
}

// ModelIDEQ applies the EQ predicate on the "model_id" field.
func ModelIDEQ(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldModelID, v))
}

// ModelIDNEQ applies the NEQ predicate on the "model_id" field.
func ModelIDNEQ(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldModelID, v))
}

// ModelIDIn applies the In predicate on the "model_id" field.
func ModelIDIn(vs ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldModelID, vs...))
}

// ModelIDNotIn applies the NotIn predicate on the "model_id" field.
func ModelIDNotIn(vs ...int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldModelID, vs...))
}

// ModelIDGT applies the GT predicate on the "model_id" field.
func ModelIDGT(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldModelID, v))
}

// ModelIDGTE applies the GTE predicate on the "model_id" field.
func ModelIDGTE(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldModelID, v))
}

// ModelIDLT applies the LT predicate on the "model_id" field.
func ModelIDLT(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldModelID, v))
}

// ModelIDLTE applies the LTE predicate on the "model_id" field.
func ModelIDLTE(v int64) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldModelID, v))
}

// ModelIDIsNil applies the IsNil predicate on the "model_id" field.
func ModelIDIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldModelID))
}

// ModelIDNotNil applies the NotNil predicate on the "model_id" field.
func ModelIDNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldModelID))
}

// IsHideEQ applies the EQ predicate on the "is_hide" field.
func IsHideEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldIsHide, v))
}

// IsHideNEQ applies the NEQ predicate on the "is_hide" field.
func IsHideNEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldIsHide, v))
}

// IsHideIn applies the In predicate on the "is_hide" field.
func IsHideIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldIsHide, vs...))
}

// IsHideNotIn applies the NotIn predicate on the "is_hide" field.
func IsHideNotIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldIsHide, vs...))
}

// IsHideGT applies the GT predicate on the "is_hide" field.
func IsHideGT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldIsHide, v))
}

// IsHideGTE applies the GTE predicate on the "is_hide" field.
func IsHideGTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldIsHide, v))
}

// IsHideLT applies the LT predicate on the "is_hide" field.
func IsHideLT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldIsHide, v))
}

// IsHideLTE applies the LTE predicate on the "is_hide" field.
func IsHideLTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldIsHide, v))
}

// IsHideIsNil applies the IsNil predicate on the "is_hide" field.
func IsHideIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldIsHide))
}

// IsHideNotNil applies the NotNil predicate on the "is_hide" field.
func IsHideNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldIsHide))
}

// IsIframeEQ applies the EQ predicate on the "is_iframe" field.
func IsIframeEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldIsIframe, v))
}

// IsIframeNEQ applies the NEQ predicate on the "is_iframe" field.
func IsIframeNEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldIsIframe, v))
}

// IsIframeIn applies the In predicate on the "is_iframe" field.
func IsIframeIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldIsIframe, vs...))
}

// IsIframeNotIn applies the NotIn predicate on the "is_iframe" field.
func IsIframeNotIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldIsIframe, vs...))
}

// IsIframeGT applies the GT predicate on the "is_iframe" field.
func IsIframeGT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldIsIframe, v))
}

// IsIframeGTE applies the GTE predicate on the "is_iframe" field.
func IsIframeGTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldIsIframe, v))
}

// IsIframeLT applies the LT predicate on the "is_iframe" field.
func IsIframeLT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldIsIframe, v))
}

// IsIframeLTE applies the LTE predicate on the "is_iframe" field.
func IsIframeLTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldIsIframe, v))
}

// IsIframeIsNil applies the IsNil predicate on the "is_iframe" field.
func IsIframeIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldIsIframe))
}

// IsIframeNotNil applies the NotNil predicate on the "is_iframe" field.
func IsIframeNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldIsIframe))
}

// IsLinkEQ applies the EQ predicate on the "is_link" field.
func IsLinkEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldIsLink, v))
}

// IsLinkNEQ applies the NEQ predicate on the "is_link" field.
func IsLinkNEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldIsLink, v))
}

// IsLinkIn applies the In predicate on the "is_link" field.
func IsLinkIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldIsLink, vs...))
}

// IsLinkNotIn applies the NotIn predicate on the "is_link" field.
func IsLinkNotIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldIsLink, vs...))
}

// IsLinkGT applies the GT predicate on the "is_link" field.
func IsLinkGT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldIsLink, v))
}

// IsLinkGTE applies the GTE predicate on the "is_link" field.
func IsLinkGTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldIsLink, v))
}

// IsLinkLT applies the LT predicate on the "is_link" field.
func IsLinkLT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldIsLink, v))
}

// IsLinkLTE applies the LTE predicate on the "is_link" field.
func IsLinkLTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldIsLink, v))
}

// IsLinkIsNil applies the IsNil predicate on the "is_link" field.
func IsLinkIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldIsLink))
}

// IsLinkNotNil applies the NotNil predicate on the "is_link" field.
func IsLinkNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldIsLink))
}

// IsCachedEQ applies the EQ predicate on the "is_cached" field.
func IsCachedEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldIsCached, v))
}

// IsCachedNEQ applies the NEQ predicate on the "is_cached" field.
func IsCachedNEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldIsCached, v))
}

// IsCachedIn applies the In predicate on the "is_cached" field.
func IsCachedIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldIsCached, vs...))
}

// IsCachedNotIn applies the NotIn predicate on the "is_cached" field.
func IsCachedNotIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldIsCached, vs...))
}

// IsCachedGT applies the GT predicate on the "is_cached" field.
func IsCachedGT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldIsCached, v))
}

// IsCachedGTE applies the GTE predicate on the "is_cached" field.
func IsCachedGTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldIsCached, v))
}

// IsCachedLT applies the LT predicate on the "is_cached" field.
func IsCachedLT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldIsCached, v))
}

// IsCachedLTE applies the LTE predicate on the "is_cached" field.
func IsCachedLTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldIsCached, v))
}

// IsCachedIsNil applies the IsNil predicate on the "is_cached" field.
func IsCachedIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldIsCached))
}

// IsCachedNotNil applies the NotNil predicate on the "is_cached" field.
func IsCachedNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldIsCached))
}

// IsAffixEQ applies the EQ predicate on the "is_affix" field.
func IsAffixEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldIsAffix, v))
}

// IsAffixNEQ applies the NEQ predicate on the "is_affix" field.
func IsAffixNEQ(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldIsAffix, v))
}

// IsAffixIn applies the In predicate on the "is_affix" field.
func IsAffixIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldIsAffix, vs...))
}

// IsAffixNotIn applies the NotIn predicate on the "is_affix" field.
func IsAffixNotIn(vs ...int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldIsAffix, vs...))
}

// IsAffixGT applies the GT predicate on the "is_affix" field.
func IsAffixGT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldIsAffix, v))
}

// IsAffixGTE applies the GTE predicate on the "is_affix" field.
func IsAffixGTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldIsAffix, v))
}

// IsAffixLT applies the LT predicate on the "is_affix" field.
func IsAffixLT(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldIsAffix, v))
}

// IsAffixLTE applies the LTE predicate on the "is_affix" field.
func IsAffixLTE(v int8) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldIsAffix, v))
}

// IsAffixIsNil applies the IsNil predicate on the "is_affix" field.
func IsAffixIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldIsAffix))
}

// IsAffixNotNil applies the NotNil predicate on the "is_affix" field.
func IsAffixNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldIsAffix))
}

// RedirectEQ applies the EQ predicate on the "redirect" field.
func RedirectEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldRedirect, v))
}

// RedirectNEQ applies the NEQ predicate on the "redirect" field.
func RedirectNEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldRedirect, v))
}

// RedirectIn applies the In predicate on the "redirect" field.
func RedirectIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldRedirect, vs...))
}

// RedirectNotIn applies the NotIn predicate on the "redirect" field.
func RedirectNotIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldRedirect, vs...))
}

// RedirectGT applies the GT predicate on the "redirect" field.
func RedirectGT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldRedirect, v))
}

// RedirectGTE applies the GTE predicate on the "redirect" field.
func RedirectGTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldRedirect, v))
}

// RedirectLT applies the LT predicate on the "redirect" field.
func RedirectLT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldRedirect, v))
}

// RedirectLTE applies the LTE predicate on the "redirect" field.
func RedirectLTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldRedirect, v))
}

// RedirectContains applies the Contains predicate on the "redirect" field.
func RedirectContains(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContains(FieldRedirect, v))
}

// RedirectHasPrefix applies the HasPrefix predicate on the "redirect" field.
func RedirectHasPrefix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasPrefix(FieldRedirect, v))
}

// RedirectHasSuffix applies the HasSuffix predicate on the "redirect" field.
func RedirectHasSuffix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasSuffix(FieldRedirect, v))
}

// RedirectIsNil applies the IsNil predicate on the "redirect" field.
func RedirectIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldRedirect))
}

// RedirectNotNil applies the NotNil predicate on the "redirect" field.
func RedirectNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldRedirect))
}

// RedirectEqualFold applies the EqualFold predicate on the "redirect" field.
func RedirectEqualFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEqualFold(FieldRedirect, v))
}

// RedirectContainsFold applies the ContainsFold predicate on the "redirect" field.
func RedirectContainsFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContainsFold(FieldRedirect, v))
}

// LinkURLEQ applies the EQ predicate on the "link_url" field.
func LinkURLEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEQ(FieldLinkURL, v))
}

// LinkURLNEQ applies the NEQ predicate on the "link_url" field.
func LinkURLNEQ(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNEQ(FieldLinkURL, v))
}

// LinkURLIn applies the In predicate on the "link_url" field.
func LinkURLIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIn(FieldLinkURL, vs...))
}

// LinkURLNotIn applies the NotIn predicate on the "link_url" field.
func LinkURLNotIn(vs ...string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotIn(FieldLinkURL, vs...))
}

// LinkURLGT applies the GT predicate on the "link_url" field.
func LinkURLGT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGT(FieldLinkURL, v))
}

// LinkURLGTE applies the GTE predicate on the "link_url" field.
func LinkURLGTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldGTE(FieldLinkURL, v))
}

// LinkURLLT applies the LT predicate on the "link_url" field.
func LinkURLLT(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLT(FieldLinkURL, v))
}

// LinkURLLTE applies the LTE predicate on the "link_url" field.
func LinkURLLTE(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldLTE(FieldLinkURL, v))
}

// LinkURLContains applies the Contains predicate on the "link_url" field.
func LinkURLContains(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContains(FieldLinkURL, v))
}

// LinkURLHasPrefix applies the HasPrefix predicate on the "link_url" field.
func LinkURLHasPrefix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasPrefix(FieldLinkURL, v))
}

// LinkURLHasSuffix applies the HasSuffix predicate on the "link_url" field.
func LinkURLHasSuffix(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldHasSuffix(FieldLinkURL, v))
}

// LinkURLIsNil applies the IsNil predicate on the "link_url" field.
func LinkURLIsNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldIsNull(FieldLinkURL))
}

// LinkURLNotNil applies the NotNil predicate on the "link_url" field.
func LinkURLNotNil() predicate.SysMenu {
	return predicate.SysMenu(sql.FieldNotNull(FieldLinkURL))
}

// LinkURLEqualFold applies the EqualFold predicate on the "link_url" field.
func LinkURLEqualFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldEqualFold(FieldLinkURL, v))
}

// LinkURLContainsFold applies the ContainsFold predicate on the "link_url" field.
func LinkURLContainsFold(v string) predicate.SysMenu {
	return predicate.SysMenu(sql.FieldContainsFold(FieldLinkURL, v))
}

// HasSysRoles applies the HasEdge predicate on the "sysRoles" edge.
func HasSysRoles() predicate.SysMenu {
	return predicate.SysMenu(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, SysRolesTable, SysRolesPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSysRolesWith applies the HasEdge predicate on the "sysRoles" edge with a given conditions (other predicates).
func HasSysRolesWith(preds ...predicate.SysRole) predicate.SysMenu {
	return predicate.SysMenu(func(s *sql.Selector) {
		step := newSysRolesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SysMenu) predicate.SysMenu {
	return predicate.SysMenu(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SysMenu) predicate.SysMenu {
	return predicate.SysMenu(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SysMenu) predicate.SysMenu {
	return predicate.SysMenu(sql.NotPredicates(p))
}
