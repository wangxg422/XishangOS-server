// Code generated by ent, DO NOT EDIT.

package sysdept

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/wangxg422/XishangOS-backend/app/module/system/model/schema/codegen/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeleteAt applies equality check predicate on the "delete_at" field. It's identical to DeleteAtEQ.
func DeleteAt(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldDeleteAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeleteBy applies equality check predicate on the "delete_by" field. It's identical to DeleteByEQ.
func DeleteBy(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldDeleteBy, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldRemark, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldStatus, v))
}

// Sort applies equality check predicate on the "sort" field. It's identical to SortEQ.
func Sort(v int) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldSort, v))
}

// DelFlag applies equality check predicate on the "del_flag" field. It's identical to DelFlagEQ.
func DelFlag(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldDelFlag, v))
}

// ParentID applies equality check predicate on the "parent_id" field. It's identical to ParentIDEQ.
func ParentID(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldParentID, v))
}

// Ancestors applies equality check predicate on the "ancestors" field. It's identical to AncestorsEQ.
func Ancestors(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldAncestors, v))
}

// DeptName applies equality check predicate on the "dept_name" field. It's identical to DeptNameEQ.
func DeptName(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldDeptName, v))
}

// DeptCode applies equality check predicate on the "dept_code" field. It's identical to DeptCodeEQ.
func DeptCode(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldDeptCode, v))
}

// Leader applies equality check predicate on the "leader" field. It's identical to LeaderEQ.
func Leader(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldLeader, v))
}

// Phone applies equality check predicate on the "phone" field. It's identical to PhoneEQ.
func Phone(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldPhone, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldEmail, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldAddress, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldUpdatedAt))
}

// DeleteAtEQ applies the EQ predicate on the "delete_at" field.
func DeleteAtEQ(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldDeleteAt, v))
}

// DeleteAtNEQ applies the NEQ predicate on the "delete_at" field.
func DeleteAtNEQ(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldDeleteAt, v))
}

// DeleteAtIn applies the In predicate on the "delete_at" field.
func DeleteAtIn(vs ...time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldDeleteAt, vs...))
}

// DeleteAtNotIn applies the NotIn predicate on the "delete_at" field.
func DeleteAtNotIn(vs ...time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldDeleteAt, vs...))
}

// DeleteAtGT applies the GT predicate on the "delete_at" field.
func DeleteAtGT(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldDeleteAt, v))
}

// DeleteAtGTE applies the GTE predicate on the "delete_at" field.
func DeleteAtGTE(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldDeleteAt, v))
}

// DeleteAtLT applies the LT predicate on the "delete_at" field.
func DeleteAtLT(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldDeleteAt, v))
}

// DeleteAtLTE applies the LTE predicate on the "delete_at" field.
func DeleteAtLTE(v time.Time) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldDeleteAt, v))
}

// DeleteAtIsNil applies the IsNil predicate on the "delete_at" field.
func DeleteAtIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldDeleteAt))
}

// DeleteAtNotNil applies the NotNil predicate on the "delete_at" field.
func DeleteAtNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldDeleteAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldCreatedBy))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldUpdatedBy))
}

// DeleteByEQ applies the EQ predicate on the "delete_by" field.
func DeleteByEQ(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldDeleteBy, v))
}

// DeleteByNEQ applies the NEQ predicate on the "delete_by" field.
func DeleteByNEQ(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldDeleteBy, v))
}

// DeleteByIn applies the In predicate on the "delete_by" field.
func DeleteByIn(vs ...int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldDeleteBy, vs...))
}

// DeleteByNotIn applies the NotIn predicate on the "delete_by" field.
func DeleteByNotIn(vs ...int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldDeleteBy, vs...))
}

// DeleteByGT applies the GT predicate on the "delete_by" field.
func DeleteByGT(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldDeleteBy, v))
}

// DeleteByGTE applies the GTE predicate on the "delete_by" field.
func DeleteByGTE(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldDeleteBy, v))
}

// DeleteByLT applies the LT predicate on the "delete_by" field.
func DeleteByLT(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldDeleteBy, v))
}

// DeleteByLTE applies the LTE predicate on the "delete_by" field.
func DeleteByLTE(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldDeleteBy, v))
}

// DeleteByIsNil applies the IsNil predicate on the "delete_by" field.
func DeleteByIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldDeleteBy))
}

// DeleteByNotNil applies the NotNil predicate on the "delete_by" field.
func DeleteByNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldDeleteBy))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkIsNil applies the IsNil predicate on the "remark" field.
func RemarkIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldRemark))
}

// RemarkNotNil applies the NotNil predicate on the "remark" field.
func RemarkNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldRemark))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContainsFold(FieldRemark, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldStatus))
}

// SortEQ applies the EQ predicate on the "sort" field.
func SortEQ(v int) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldSort, v))
}

// SortNEQ applies the NEQ predicate on the "sort" field.
func SortNEQ(v int) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldSort, v))
}

// SortIn applies the In predicate on the "sort" field.
func SortIn(vs ...int) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldSort, vs...))
}

// SortNotIn applies the NotIn predicate on the "sort" field.
func SortNotIn(vs ...int) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldSort, vs...))
}

// SortGT applies the GT predicate on the "sort" field.
func SortGT(v int) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldSort, v))
}

// SortGTE applies the GTE predicate on the "sort" field.
func SortGTE(v int) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldSort, v))
}

// SortLT applies the LT predicate on the "sort" field.
func SortLT(v int) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldSort, v))
}

// SortLTE applies the LTE predicate on the "sort" field.
func SortLTE(v int) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldSort, v))
}

// SortIsNil applies the IsNil predicate on the "sort" field.
func SortIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldSort))
}

// SortNotNil applies the NotNil predicate on the "sort" field.
func SortNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldSort))
}

// DelFlagEQ applies the EQ predicate on the "del_flag" field.
func DelFlagEQ(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldDelFlag, v))
}

// DelFlagNEQ applies the NEQ predicate on the "del_flag" field.
func DelFlagNEQ(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldDelFlag, v))
}

// DelFlagIn applies the In predicate on the "del_flag" field.
func DelFlagIn(vs ...int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldDelFlag, vs...))
}

// DelFlagNotIn applies the NotIn predicate on the "del_flag" field.
func DelFlagNotIn(vs ...int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldDelFlag, vs...))
}

// DelFlagGT applies the GT predicate on the "del_flag" field.
func DelFlagGT(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldDelFlag, v))
}

// DelFlagGTE applies the GTE predicate on the "del_flag" field.
func DelFlagGTE(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldDelFlag, v))
}

// DelFlagLT applies the LT predicate on the "del_flag" field.
func DelFlagLT(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldDelFlag, v))
}

// DelFlagLTE applies the LTE predicate on the "del_flag" field.
func DelFlagLTE(v int8) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldDelFlag, v))
}

// DelFlagIsNil applies the IsNil predicate on the "del_flag" field.
func DelFlagIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldDelFlag))
}

// DelFlagNotNil applies the NotNil predicate on the "del_flag" field.
func DelFlagNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldDelFlag))
}

// ParentIDEQ applies the EQ predicate on the "parent_id" field.
func ParentIDEQ(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldParentID, v))
}

// ParentIDNEQ applies the NEQ predicate on the "parent_id" field.
func ParentIDNEQ(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldParentID, v))
}

// ParentIDIn applies the In predicate on the "parent_id" field.
func ParentIDIn(vs ...int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldParentID, vs...))
}

// ParentIDNotIn applies the NotIn predicate on the "parent_id" field.
func ParentIDNotIn(vs ...int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldParentID, vs...))
}

// ParentIDGT applies the GT predicate on the "parent_id" field.
func ParentIDGT(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldParentID, v))
}

// ParentIDGTE applies the GTE predicate on the "parent_id" field.
func ParentIDGTE(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldParentID, v))
}

// ParentIDLT applies the LT predicate on the "parent_id" field.
func ParentIDLT(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldParentID, v))
}

// ParentIDLTE applies the LTE predicate on the "parent_id" field.
func ParentIDLTE(v int64) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldParentID, v))
}

// AncestorsEQ applies the EQ predicate on the "ancestors" field.
func AncestorsEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldAncestors, v))
}

// AncestorsNEQ applies the NEQ predicate on the "ancestors" field.
func AncestorsNEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldAncestors, v))
}

// AncestorsIn applies the In predicate on the "ancestors" field.
func AncestorsIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldAncestors, vs...))
}

// AncestorsNotIn applies the NotIn predicate on the "ancestors" field.
func AncestorsNotIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldAncestors, vs...))
}

// AncestorsGT applies the GT predicate on the "ancestors" field.
func AncestorsGT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldAncestors, v))
}

// AncestorsGTE applies the GTE predicate on the "ancestors" field.
func AncestorsGTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldAncestors, v))
}

// AncestorsLT applies the LT predicate on the "ancestors" field.
func AncestorsLT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldAncestors, v))
}

// AncestorsLTE applies the LTE predicate on the "ancestors" field.
func AncestorsLTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldAncestors, v))
}

// AncestorsContains applies the Contains predicate on the "ancestors" field.
func AncestorsContains(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContains(FieldAncestors, v))
}

// AncestorsHasPrefix applies the HasPrefix predicate on the "ancestors" field.
func AncestorsHasPrefix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasPrefix(FieldAncestors, v))
}

// AncestorsHasSuffix applies the HasSuffix predicate on the "ancestors" field.
func AncestorsHasSuffix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasSuffix(FieldAncestors, v))
}

// AncestorsIsNil applies the IsNil predicate on the "ancestors" field.
func AncestorsIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldAncestors))
}

// AncestorsNotNil applies the NotNil predicate on the "ancestors" field.
func AncestorsNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldAncestors))
}

// AncestorsEqualFold applies the EqualFold predicate on the "ancestors" field.
func AncestorsEqualFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEqualFold(FieldAncestors, v))
}

// AncestorsContainsFold applies the ContainsFold predicate on the "ancestors" field.
func AncestorsContainsFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContainsFold(FieldAncestors, v))
}

// DeptNameEQ applies the EQ predicate on the "dept_name" field.
func DeptNameEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldDeptName, v))
}

// DeptNameNEQ applies the NEQ predicate on the "dept_name" field.
func DeptNameNEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldDeptName, v))
}

// DeptNameIn applies the In predicate on the "dept_name" field.
func DeptNameIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldDeptName, vs...))
}

// DeptNameNotIn applies the NotIn predicate on the "dept_name" field.
func DeptNameNotIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldDeptName, vs...))
}

// DeptNameGT applies the GT predicate on the "dept_name" field.
func DeptNameGT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldDeptName, v))
}

// DeptNameGTE applies the GTE predicate on the "dept_name" field.
func DeptNameGTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldDeptName, v))
}

// DeptNameLT applies the LT predicate on the "dept_name" field.
func DeptNameLT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldDeptName, v))
}

// DeptNameLTE applies the LTE predicate on the "dept_name" field.
func DeptNameLTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldDeptName, v))
}

// DeptNameContains applies the Contains predicate on the "dept_name" field.
func DeptNameContains(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContains(FieldDeptName, v))
}

// DeptNameHasPrefix applies the HasPrefix predicate on the "dept_name" field.
func DeptNameHasPrefix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasPrefix(FieldDeptName, v))
}

// DeptNameHasSuffix applies the HasSuffix predicate on the "dept_name" field.
func DeptNameHasSuffix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasSuffix(FieldDeptName, v))
}

// DeptNameIsNil applies the IsNil predicate on the "dept_name" field.
func DeptNameIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldDeptName))
}

// DeptNameNotNil applies the NotNil predicate on the "dept_name" field.
func DeptNameNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldDeptName))
}

// DeptNameEqualFold applies the EqualFold predicate on the "dept_name" field.
func DeptNameEqualFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEqualFold(FieldDeptName, v))
}

// DeptNameContainsFold applies the ContainsFold predicate on the "dept_name" field.
func DeptNameContainsFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContainsFold(FieldDeptName, v))
}

// DeptCodeEQ applies the EQ predicate on the "dept_code" field.
func DeptCodeEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldDeptCode, v))
}

// DeptCodeNEQ applies the NEQ predicate on the "dept_code" field.
func DeptCodeNEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldDeptCode, v))
}

// DeptCodeIn applies the In predicate on the "dept_code" field.
func DeptCodeIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldDeptCode, vs...))
}

// DeptCodeNotIn applies the NotIn predicate on the "dept_code" field.
func DeptCodeNotIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldDeptCode, vs...))
}

// DeptCodeGT applies the GT predicate on the "dept_code" field.
func DeptCodeGT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldDeptCode, v))
}

// DeptCodeGTE applies the GTE predicate on the "dept_code" field.
func DeptCodeGTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldDeptCode, v))
}

// DeptCodeLT applies the LT predicate on the "dept_code" field.
func DeptCodeLT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldDeptCode, v))
}

// DeptCodeLTE applies the LTE predicate on the "dept_code" field.
func DeptCodeLTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldDeptCode, v))
}

// DeptCodeContains applies the Contains predicate on the "dept_code" field.
func DeptCodeContains(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContains(FieldDeptCode, v))
}

// DeptCodeHasPrefix applies the HasPrefix predicate on the "dept_code" field.
func DeptCodeHasPrefix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasPrefix(FieldDeptCode, v))
}

// DeptCodeHasSuffix applies the HasSuffix predicate on the "dept_code" field.
func DeptCodeHasSuffix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasSuffix(FieldDeptCode, v))
}

// DeptCodeIsNil applies the IsNil predicate on the "dept_code" field.
func DeptCodeIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldDeptCode))
}

// DeptCodeNotNil applies the NotNil predicate on the "dept_code" field.
func DeptCodeNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldDeptCode))
}

// DeptCodeEqualFold applies the EqualFold predicate on the "dept_code" field.
func DeptCodeEqualFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEqualFold(FieldDeptCode, v))
}

// DeptCodeContainsFold applies the ContainsFold predicate on the "dept_code" field.
func DeptCodeContainsFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContainsFold(FieldDeptCode, v))
}

// LeaderEQ applies the EQ predicate on the "leader" field.
func LeaderEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldLeader, v))
}

// LeaderNEQ applies the NEQ predicate on the "leader" field.
func LeaderNEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldLeader, v))
}

// LeaderIn applies the In predicate on the "leader" field.
func LeaderIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldLeader, vs...))
}

// LeaderNotIn applies the NotIn predicate on the "leader" field.
func LeaderNotIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldLeader, vs...))
}

// LeaderGT applies the GT predicate on the "leader" field.
func LeaderGT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldLeader, v))
}

// LeaderGTE applies the GTE predicate on the "leader" field.
func LeaderGTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldLeader, v))
}

// LeaderLT applies the LT predicate on the "leader" field.
func LeaderLT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldLeader, v))
}

// LeaderLTE applies the LTE predicate on the "leader" field.
func LeaderLTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldLeader, v))
}

// LeaderContains applies the Contains predicate on the "leader" field.
func LeaderContains(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContains(FieldLeader, v))
}

// LeaderHasPrefix applies the HasPrefix predicate on the "leader" field.
func LeaderHasPrefix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasPrefix(FieldLeader, v))
}

// LeaderHasSuffix applies the HasSuffix predicate on the "leader" field.
func LeaderHasSuffix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasSuffix(FieldLeader, v))
}

// LeaderIsNil applies the IsNil predicate on the "leader" field.
func LeaderIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldLeader))
}

// LeaderNotNil applies the NotNil predicate on the "leader" field.
func LeaderNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldLeader))
}

// LeaderEqualFold applies the EqualFold predicate on the "leader" field.
func LeaderEqualFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEqualFold(FieldLeader, v))
}

// LeaderContainsFold applies the ContainsFold predicate on the "leader" field.
func LeaderContainsFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContainsFold(FieldLeader, v))
}

// PhoneEQ applies the EQ predicate on the "phone" field.
func PhoneEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldPhone, v))
}

// PhoneNEQ applies the NEQ predicate on the "phone" field.
func PhoneNEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldPhone, v))
}

// PhoneIn applies the In predicate on the "phone" field.
func PhoneIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldPhone, vs...))
}

// PhoneNotIn applies the NotIn predicate on the "phone" field.
func PhoneNotIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldPhone, vs...))
}

// PhoneGT applies the GT predicate on the "phone" field.
func PhoneGT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldPhone, v))
}

// PhoneGTE applies the GTE predicate on the "phone" field.
func PhoneGTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldPhone, v))
}

// PhoneLT applies the LT predicate on the "phone" field.
func PhoneLT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldPhone, v))
}

// PhoneLTE applies the LTE predicate on the "phone" field.
func PhoneLTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldPhone, v))
}

// PhoneContains applies the Contains predicate on the "phone" field.
func PhoneContains(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContains(FieldPhone, v))
}

// PhoneHasPrefix applies the HasPrefix predicate on the "phone" field.
func PhoneHasPrefix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasPrefix(FieldPhone, v))
}

// PhoneHasSuffix applies the HasSuffix predicate on the "phone" field.
func PhoneHasSuffix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasSuffix(FieldPhone, v))
}

// PhoneIsNil applies the IsNil predicate on the "phone" field.
func PhoneIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldPhone))
}

// PhoneNotNil applies the NotNil predicate on the "phone" field.
func PhoneNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldPhone))
}

// PhoneEqualFold applies the EqualFold predicate on the "phone" field.
func PhoneEqualFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEqualFold(FieldPhone, v))
}

// PhoneContainsFold applies the ContainsFold predicate on the "phone" field.
func PhoneContainsFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContainsFold(FieldPhone, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailIsNil applies the IsNil predicate on the "email" field.
func EmailIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldEmail))
}

// EmailNotNil applies the NotNil predicate on the "email" field.
func EmailNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldEmail))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContainsFold(FieldEmail, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.SysDept {
	return predicate.SysDept(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressIsNil applies the IsNil predicate on the "address" field.
func AddressIsNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldIsNull(FieldAddress))
}

// AddressNotNil applies the NotNil predicate on the "address" field.
func AddressNotNil() predicate.SysDept {
	return predicate.SysDept(sql.FieldNotNull(FieldAddress))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.SysDept {
	return predicate.SysDept(sql.FieldContainsFold(FieldAddress, v))
}

// HasSysUsers applies the HasEdge predicate on the "sysUsers" edge.
func HasSysUsers() predicate.SysDept {
	return predicate.SysDept(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, SysUsersTable, SysUsersColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSysUsersWith applies the HasEdge predicate on the "sysUsers" edge with a given conditions (other predicates).
func HasSysUsersWith(preds ...predicate.SysUser) predicate.SysDept {
	return predicate.SysDept(func(s *sql.Selector) {
		step := newSysUsersStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasSysRoles applies the HasEdge predicate on the "sysRoles" edge.
func HasSysRoles() predicate.SysDept {
	return predicate.SysDept(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, SysRolesTable, SysRolesPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSysRolesWith applies the HasEdge predicate on the "sysRoles" edge with a given conditions (other predicates).
func HasSysRolesWith(preds ...predicate.SysRole) predicate.SysDept {
	return predicate.SysDept(func(s *sql.Selector) {
		step := newSysRolesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SysDept) predicate.SysDept {
	return predicate.SysDept(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SysDept) predicate.SysDept {
	return predicate.SysDept(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SysDept) predicate.SysDept {
	return predicate.SysDept(sql.NotPredicates(p))
}
