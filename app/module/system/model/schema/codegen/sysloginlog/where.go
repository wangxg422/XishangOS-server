// Code generated by ent, DO NOT EDIT.

package sysloginlog

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/wangxg422/XishangOS-backend/app/module/system/model/schema/codegen/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLTE(FieldID, id))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int8) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldStatus, v))
}

// LoginName applies equality check predicate on the "login_name" field. It's identical to LoginNameEQ.
func LoginName(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldLoginName, v))
}

// IPAddr applies equality check predicate on the "ip_addr" field. It's identical to IPAddrEQ.
func IPAddr(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldIPAddr, v))
}

// LoginLocation applies equality check predicate on the "login_location" field. It's identical to LoginLocationEQ.
func LoginLocation(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldLoginLocation, v))
}

// Browser applies equality check predicate on the "browser" field. It's identical to BrowserEQ.
func Browser(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldBrowser, v))
}

// Os applies equality check predicate on the "os" field. It's identical to OsEQ.
func Os(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldOs, v))
}

// Msg applies equality check predicate on the "msg" field. It's identical to MsgEQ.
func Msg(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldMsg, v))
}

// LoginTime applies equality check predicate on the "login_time" field. It's identical to LoginTimeEQ.
func LoginTime(v time.Time) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldLoginTime, v))
}

// Module applies equality check predicate on the "module" field. It's identical to ModuleEQ.
func Module(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldModule, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int8) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int8) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int8) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int8) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int8) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int8) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int8) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int8) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLTE(FieldStatus, v))
}

// LoginNameEQ applies the EQ predicate on the "login_name" field.
func LoginNameEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldLoginName, v))
}

// LoginNameNEQ applies the NEQ predicate on the "login_name" field.
func LoginNameNEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNEQ(FieldLoginName, v))
}

// LoginNameIn applies the In predicate on the "login_name" field.
func LoginNameIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIn(FieldLoginName, vs...))
}

// LoginNameNotIn applies the NotIn predicate on the "login_name" field.
func LoginNameNotIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotIn(FieldLoginName, vs...))
}

// LoginNameGT applies the GT predicate on the "login_name" field.
func LoginNameGT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGT(FieldLoginName, v))
}

// LoginNameGTE applies the GTE predicate on the "login_name" field.
func LoginNameGTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGTE(FieldLoginName, v))
}

// LoginNameLT applies the LT predicate on the "login_name" field.
func LoginNameLT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLT(FieldLoginName, v))
}

// LoginNameLTE applies the LTE predicate on the "login_name" field.
func LoginNameLTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLTE(FieldLoginName, v))
}

// LoginNameContains applies the Contains predicate on the "login_name" field.
func LoginNameContains(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContains(FieldLoginName, v))
}

// LoginNameHasPrefix applies the HasPrefix predicate on the "login_name" field.
func LoginNameHasPrefix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasPrefix(FieldLoginName, v))
}

// LoginNameHasSuffix applies the HasSuffix predicate on the "login_name" field.
func LoginNameHasSuffix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasSuffix(FieldLoginName, v))
}

// LoginNameIsNil applies the IsNil predicate on the "login_name" field.
func LoginNameIsNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIsNull(FieldLoginName))
}

// LoginNameNotNil applies the NotNil predicate on the "login_name" field.
func LoginNameNotNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotNull(FieldLoginName))
}

// LoginNameEqualFold applies the EqualFold predicate on the "login_name" field.
func LoginNameEqualFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEqualFold(FieldLoginName, v))
}

// LoginNameContainsFold applies the ContainsFold predicate on the "login_name" field.
func LoginNameContainsFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContainsFold(FieldLoginName, v))
}

// IPAddrEQ applies the EQ predicate on the "ip_addr" field.
func IPAddrEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldIPAddr, v))
}

// IPAddrNEQ applies the NEQ predicate on the "ip_addr" field.
func IPAddrNEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNEQ(FieldIPAddr, v))
}

// IPAddrIn applies the In predicate on the "ip_addr" field.
func IPAddrIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIn(FieldIPAddr, vs...))
}

// IPAddrNotIn applies the NotIn predicate on the "ip_addr" field.
func IPAddrNotIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotIn(FieldIPAddr, vs...))
}

// IPAddrGT applies the GT predicate on the "ip_addr" field.
func IPAddrGT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGT(FieldIPAddr, v))
}

// IPAddrGTE applies the GTE predicate on the "ip_addr" field.
func IPAddrGTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGTE(FieldIPAddr, v))
}

// IPAddrLT applies the LT predicate on the "ip_addr" field.
func IPAddrLT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLT(FieldIPAddr, v))
}

// IPAddrLTE applies the LTE predicate on the "ip_addr" field.
func IPAddrLTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLTE(FieldIPAddr, v))
}

// IPAddrContains applies the Contains predicate on the "ip_addr" field.
func IPAddrContains(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContains(FieldIPAddr, v))
}

// IPAddrHasPrefix applies the HasPrefix predicate on the "ip_addr" field.
func IPAddrHasPrefix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasPrefix(FieldIPAddr, v))
}

// IPAddrHasSuffix applies the HasSuffix predicate on the "ip_addr" field.
func IPAddrHasSuffix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasSuffix(FieldIPAddr, v))
}

// IPAddrIsNil applies the IsNil predicate on the "ip_addr" field.
func IPAddrIsNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIsNull(FieldIPAddr))
}

// IPAddrNotNil applies the NotNil predicate on the "ip_addr" field.
func IPAddrNotNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotNull(FieldIPAddr))
}

// IPAddrEqualFold applies the EqualFold predicate on the "ip_addr" field.
func IPAddrEqualFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEqualFold(FieldIPAddr, v))
}

// IPAddrContainsFold applies the ContainsFold predicate on the "ip_addr" field.
func IPAddrContainsFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContainsFold(FieldIPAddr, v))
}

// LoginLocationEQ applies the EQ predicate on the "login_location" field.
func LoginLocationEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldLoginLocation, v))
}

// LoginLocationNEQ applies the NEQ predicate on the "login_location" field.
func LoginLocationNEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNEQ(FieldLoginLocation, v))
}

// LoginLocationIn applies the In predicate on the "login_location" field.
func LoginLocationIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIn(FieldLoginLocation, vs...))
}

// LoginLocationNotIn applies the NotIn predicate on the "login_location" field.
func LoginLocationNotIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotIn(FieldLoginLocation, vs...))
}

// LoginLocationGT applies the GT predicate on the "login_location" field.
func LoginLocationGT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGT(FieldLoginLocation, v))
}

// LoginLocationGTE applies the GTE predicate on the "login_location" field.
func LoginLocationGTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGTE(FieldLoginLocation, v))
}

// LoginLocationLT applies the LT predicate on the "login_location" field.
func LoginLocationLT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLT(FieldLoginLocation, v))
}

// LoginLocationLTE applies the LTE predicate on the "login_location" field.
func LoginLocationLTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLTE(FieldLoginLocation, v))
}

// LoginLocationContains applies the Contains predicate on the "login_location" field.
func LoginLocationContains(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContains(FieldLoginLocation, v))
}

// LoginLocationHasPrefix applies the HasPrefix predicate on the "login_location" field.
func LoginLocationHasPrefix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasPrefix(FieldLoginLocation, v))
}

// LoginLocationHasSuffix applies the HasSuffix predicate on the "login_location" field.
func LoginLocationHasSuffix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasSuffix(FieldLoginLocation, v))
}

// LoginLocationIsNil applies the IsNil predicate on the "login_location" field.
func LoginLocationIsNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIsNull(FieldLoginLocation))
}

// LoginLocationNotNil applies the NotNil predicate on the "login_location" field.
func LoginLocationNotNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotNull(FieldLoginLocation))
}

// LoginLocationEqualFold applies the EqualFold predicate on the "login_location" field.
func LoginLocationEqualFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEqualFold(FieldLoginLocation, v))
}

// LoginLocationContainsFold applies the ContainsFold predicate on the "login_location" field.
func LoginLocationContainsFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContainsFold(FieldLoginLocation, v))
}

// BrowserEQ applies the EQ predicate on the "browser" field.
func BrowserEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldBrowser, v))
}

// BrowserNEQ applies the NEQ predicate on the "browser" field.
func BrowserNEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNEQ(FieldBrowser, v))
}

// BrowserIn applies the In predicate on the "browser" field.
func BrowserIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIn(FieldBrowser, vs...))
}

// BrowserNotIn applies the NotIn predicate on the "browser" field.
func BrowserNotIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotIn(FieldBrowser, vs...))
}

// BrowserGT applies the GT predicate on the "browser" field.
func BrowserGT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGT(FieldBrowser, v))
}

// BrowserGTE applies the GTE predicate on the "browser" field.
func BrowserGTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGTE(FieldBrowser, v))
}

// BrowserLT applies the LT predicate on the "browser" field.
func BrowserLT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLT(FieldBrowser, v))
}

// BrowserLTE applies the LTE predicate on the "browser" field.
func BrowserLTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLTE(FieldBrowser, v))
}

// BrowserContains applies the Contains predicate on the "browser" field.
func BrowserContains(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContains(FieldBrowser, v))
}

// BrowserHasPrefix applies the HasPrefix predicate on the "browser" field.
func BrowserHasPrefix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasPrefix(FieldBrowser, v))
}

// BrowserHasSuffix applies the HasSuffix predicate on the "browser" field.
func BrowserHasSuffix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasSuffix(FieldBrowser, v))
}

// BrowserIsNil applies the IsNil predicate on the "browser" field.
func BrowserIsNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIsNull(FieldBrowser))
}

// BrowserNotNil applies the NotNil predicate on the "browser" field.
func BrowserNotNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotNull(FieldBrowser))
}

// BrowserEqualFold applies the EqualFold predicate on the "browser" field.
func BrowserEqualFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEqualFold(FieldBrowser, v))
}

// BrowserContainsFold applies the ContainsFold predicate on the "browser" field.
func BrowserContainsFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContainsFold(FieldBrowser, v))
}

// OsEQ applies the EQ predicate on the "os" field.
func OsEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldOs, v))
}

// OsNEQ applies the NEQ predicate on the "os" field.
func OsNEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNEQ(FieldOs, v))
}

// OsIn applies the In predicate on the "os" field.
func OsIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIn(FieldOs, vs...))
}

// OsNotIn applies the NotIn predicate on the "os" field.
func OsNotIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotIn(FieldOs, vs...))
}

// OsGT applies the GT predicate on the "os" field.
func OsGT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGT(FieldOs, v))
}

// OsGTE applies the GTE predicate on the "os" field.
func OsGTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGTE(FieldOs, v))
}

// OsLT applies the LT predicate on the "os" field.
func OsLT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLT(FieldOs, v))
}

// OsLTE applies the LTE predicate on the "os" field.
func OsLTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLTE(FieldOs, v))
}

// OsContains applies the Contains predicate on the "os" field.
func OsContains(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContains(FieldOs, v))
}

// OsHasPrefix applies the HasPrefix predicate on the "os" field.
func OsHasPrefix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasPrefix(FieldOs, v))
}

// OsHasSuffix applies the HasSuffix predicate on the "os" field.
func OsHasSuffix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasSuffix(FieldOs, v))
}

// OsIsNil applies the IsNil predicate on the "os" field.
func OsIsNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIsNull(FieldOs))
}

// OsNotNil applies the NotNil predicate on the "os" field.
func OsNotNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotNull(FieldOs))
}

// OsEqualFold applies the EqualFold predicate on the "os" field.
func OsEqualFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEqualFold(FieldOs, v))
}

// OsContainsFold applies the ContainsFold predicate on the "os" field.
func OsContainsFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContainsFold(FieldOs, v))
}

// MsgEQ applies the EQ predicate on the "msg" field.
func MsgEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldMsg, v))
}

// MsgNEQ applies the NEQ predicate on the "msg" field.
func MsgNEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNEQ(FieldMsg, v))
}

// MsgIn applies the In predicate on the "msg" field.
func MsgIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIn(FieldMsg, vs...))
}

// MsgNotIn applies the NotIn predicate on the "msg" field.
func MsgNotIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotIn(FieldMsg, vs...))
}

// MsgGT applies the GT predicate on the "msg" field.
func MsgGT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGT(FieldMsg, v))
}

// MsgGTE applies the GTE predicate on the "msg" field.
func MsgGTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGTE(FieldMsg, v))
}

// MsgLT applies the LT predicate on the "msg" field.
func MsgLT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLT(FieldMsg, v))
}

// MsgLTE applies the LTE predicate on the "msg" field.
func MsgLTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLTE(FieldMsg, v))
}

// MsgContains applies the Contains predicate on the "msg" field.
func MsgContains(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContains(FieldMsg, v))
}

// MsgHasPrefix applies the HasPrefix predicate on the "msg" field.
func MsgHasPrefix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasPrefix(FieldMsg, v))
}

// MsgHasSuffix applies the HasSuffix predicate on the "msg" field.
func MsgHasSuffix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasSuffix(FieldMsg, v))
}

// MsgIsNil applies the IsNil predicate on the "msg" field.
func MsgIsNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIsNull(FieldMsg))
}

// MsgNotNil applies the NotNil predicate on the "msg" field.
func MsgNotNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotNull(FieldMsg))
}

// MsgEqualFold applies the EqualFold predicate on the "msg" field.
func MsgEqualFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEqualFold(FieldMsg, v))
}

// MsgContainsFold applies the ContainsFold predicate on the "msg" field.
func MsgContainsFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContainsFold(FieldMsg, v))
}

// LoginTimeEQ applies the EQ predicate on the "login_time" field.
func LoginTimeEQ(v time.Time) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldLoginTime, v))
}

// LoginTimeNEQ applies the NEQ predicate on the "login_time" field.
func LoginTimeNEQ(v time.Time) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNEQ(FieldLoginTime, v))
}

// LoginTimeIn applies the In predicate on the "login_time" field.
func LoginTimeIn(vs ...time.Time) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIn(FieldLoginTime, vs...))
}

// LoginTimeNotIn applies the NotIn predicate on the "login_time" field.
func LoginTimeNotIn(vs ...time.Time) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotIn(FieldLoginTime, vs...))
}

// LoginTimeGT applies the GT predicate on the "login_time" field.
func LoginTimeGT(v time.Time) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGT(FieldLoginTime, v))
}

// LoginTimeGTE applies the GTE predicate on the "login_time" field.
func LoginTimeGTE(v time.Time) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGTE(FieldLoginTime, v))
}

// LoginTimeLT applies the LT predicate on the "login_time" field.
func LoginTimeLT(v time.Time) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLT(FieldLoginTime, v))
}

// LoginTimeLTE applies the LTE predicate on the "login_time" field.
func LoginTimeLTE(v time.Time) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLTE(FieldLoginTime, v))
}

// LoginTimeIsNil applies the IsNil predicate on the "login_time" field.
func LoginTimeIsNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIsNull(FieldLoginTime))
}

// LoginTimeNotNil applies the NotNil predicate on the "login_time" field.
func LoginTimeNotNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotNull(FieldLoginTime))
}

// ModuleEQ applies the EQ predicate on the "module" field.
func ModuleEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEQ(FieldModule, v))
}

// ModuleNEQ applies the NEQ predicate on the "module" field.
func ModuleNEQ(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNEQ(FieldModule, v))
}

// ModuleIn applies the In predicate on the "module" field.
func ModuleIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIn(FieldModule, vs...))
}

// ModuleNotIn applies the NotIn predicate on the "module" field.
func ModuleNotIn(vs ...string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotIn(FieldModule, vs...))
}

// ModuleGT applies the GT predicate on the "module" field.
func ModuleGT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGT(FieldModule, v))
}

// ModuleGTE applies the GTE predicate on the "module" field.
func ModuleGTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldGTE(FieldModule, v))
}

// ModuleLT applies the LT predicate on the "module" field.
func ModuleLT(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLT(FieldModule, v))
}

// ModuleLTE applies the LTE predicate on the "module" field.
func ModuleLTE(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldLTE(FieldModule, v))
}

// ModuleContains applies the Contains predicate on the "module" field.
func ModuleContains(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContains(FieldModule, v))
}

// ModuleHasPrefix applies the HasPrefix predicate on the "module" field.
func ModuleHasPrefix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasPrefix(FieldModule, v))
}

// ModuleHasSuffix applies the HasSuffix predicate on the "module" field.
func ModuleHasSuffix(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldHasSuffix(FieldModule, v))
}

// ModuleIsNil applies the IsNil predicate on the "module" field.
func ModuleIsNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldIsNull(FieldModule))
}

// ModuleNotNil applies the NotNil predicate on the "module" field.
func ModuleNotNil() predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldNotNull(FieldModule))
}

// ModuleEqualFold applies the EqualFold predicate on the "module" field.
func ModuleEqualFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldEqualFold(FieldModule, v))
}

// ModuleContainsFold applies the ContainsFold predicate on the "module" field.
func ModuleContainsFold(v string) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.FieldContainsFold(FieldModule, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SysLoginLog) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SysLoginLog) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SysLoginLog) predicate.SysLoginLog {
	return predicate.SysLoginLog(sql.NotPredicates(p))
}
